{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { type Client, type IAgentRuntime, elizaLogger, type Plugin } from \"@elizaos/core\";\n\n// Define parameter types\ntype MentionsParams = {\n    keywords: string;\n    from?: number;\n    to?: number;\n    limit?: number;\n    searchType?: 'and' | 'or';\n    cursor?: string;\n};\n\ntype TopMentionsParams = {\n    timeframe: string;\n    limit: number;\n    ticker: string;\n};\n\ntype TrendingTokensParams = {\n    timeframe: string;\n    limit: number;\n};\n\n// Add a new type for POST_ELFA_DATA params\ntype PostElfaDataParams = {\n    dataType: 'mentions' | 'topMentions' | 'trendingTokens';\n    keywords?: string;\n    timeframe?: string;\n    limit?: number;\n    from?: number;\n    to?: number;\n};\n\ntype ActionType = {\n    name: string;\n    trigger: string;\n    params: MentionsParams | TopMentionsParams | TrendingTokensParams | PostElfaDataParams;\n};\n\nclass AutoClient {\n    interval: NodeJS.Timeout;\n    runtime: IAgentRuntime;\n    private readonly actionTypes: ActionType[] = [\n        {\n            name: \"GET_MENTIONS\",\n            trigger: \"Show me recent mentions of hyperliquid, $stHYPE, $HYPE, and $BUDDY\",\n            params: { \n                keywords: \"HYPE, bitcoin, hyperliquid, $BUDDY, $stHYPE\",\n                limit: 20\n            }\n        },\n        {\n            name: \"GET_TOP_MENTIONS\",\n            trigger: \"What are the top mentions?\",\n            params: { \n                timeframe: \"24h\", \n                limit: 10,\n                ticker: \"HYPE\"\n            }\n        },\n        {\n            name: \"GET_TRENDING_TOKENS\",\n            trigger: \"Show me trending tokens\",\n            params: { timeframe: \"24h\", limit: 5 }\n        },\n        // Add our new POST_ELFA_DATA action\n        {\n            name: \"POST_ELFA_DATA\",\n            trigger: \"Post a tweet about trending tokens\",\n            params: { \n                dataType: \"trendingTokens\",\n                timeframe: \"24h\", \n                limit: 5 \n            }\n        },\n        {\n            name: \"POST_ELFA_DATA\",\n            trigger: \"Share the top mentions on Twitter\",\n            params: { \n                dataType: \"topMentions\",\n                timeframe: \"24h\", \n                limit: 5 \n            }\n        },\n        {\n            name: \"POST_ELFA_DATA\",\n            trigger: \"Tweet about recent HYPE mentions\",\n            params: { \n                dataType: \"mentions\",\n                keywords: \"HYPE, bitcoin, hyperliquid, $BUDDY, $stHYPE\",\n                limit: 10 \n            }\n        },\n    ];\n\n    constructor(runtime: IAgentRuntime) {\n        this.runtime = runtime;\n\n        // start a loop that runs every x seconds\n        this.interval = setInterval(\n            async () => {\n                elizaLogger.log(\"running auto client...\");\n            },\n            60 * 60 * 1000\n        ); // 1 hour in milliseconds\n    }\n\n    async stop() {\n        clearInterval(this.interval);\n    }\n}\n\nconst AutoClientInterface: Client = {\n    name: 'auto',\n    start: async (runtime: IAgentRuntime) => {\n        const client = new AutoClient(runtime);\n        return client;\n    },\n};\n\nconst autoPlugin: Plugin = {\n    name: \"auto\",\n    description: \"Auto client plugin\",\n    clients: [AutoClientInterface],\n};\nexport default autoPlugin;"],"mappings":";AAAA,SAA0C,mBAAgC;AAuC1E,IAAM,aAAN,MAAiB;AAAA,EACb;AAAA,EACA;AAAA,EACiB,cAA4B;AAAA,IACzC;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,UAAU;AAAA,QACV,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,WAAW;AAAA,QACX,OAAO;AAAA,QACP,QAAQ;AAAA,MACZ;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ,EAAE,WAAW,OAAO,OAAO,EAAE;AAAA,IACzC;AAAA;AAAA,IAEA;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,UAAU;AAAA,QACV,WAAW;AAAA,QACX,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,UAAU;AAAA,QACV,WAAW;AAAA,QACX,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,IACA;AAAA,MACI,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,OAAO;AAAA,MACX;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,YAAY,SAAwB;AAChC,SAAK,UAAU;AAGf,SAAK,WAAW;AAAA,MACZ,YAAY;AACR,oBAAY,IAAI,wBAAwB;AAAA,MAC5C;AAAA,MACA,KAAK,KAAK;AAAA,IACd;AAAA,EACJ;AAAA,EAEA,MAAM,OAAO;AACT,kBAAc,KAAK,QAAQ;AAAA,EAC/B;AACJ;AAEA,IAAM,sBAA8B;AAAA,EAChC,MAAM;AAAA,EACN,OAAO,OAAO,YAA2B;AACrC,UAAM,SAAS,IAAI,WAAW,OAAO;AACrC,WAAO;AAAA,EACX;AACJ;AAEA,IAAM,aAAqB;AAAA,EACvB,MAAM;AAAA,EACN,aAAa;AAAA,EACb,SAAS,CAAC,mBAAmB;AACjC;AACA,IAAO,gBAAQ;","names":[]}